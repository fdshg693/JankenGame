@page "/blackjack"
@using JankenGame.Models
@using JankenGame.Models.BlackJack
@using JankenGame.Services.BlackJack
@rendermode InteractiveServer

<h3>ブラックジャック</h3>

<div class="game-board">
    <section>
        <h4>ディーラー</h4>
        @foreach (var card in Dealer.Cards)
        {
            <div class="card">@card.Name</div>
        }     
        <p>スコア: @Dealer.Score</p>
    </section>

    <section>
        <h4>プレイヤー</h4>
        @foreach (var card in Player.Cards)
        {
            <div class="card">@card.Name</div>
        }
        <p>スコア: @Player.Score</p>
    </section>
</div>

<div class="controls">
    @if (!GameStarted)
    {
        <button @onclick="StartGame">ゲーム開始</button>
    }
    else if (!GameOver)
    {
        <button @onclick="Hit">ヒット</button>
        <button @onclick="Stand">スタンド</button>
    }
    else
    {
        <p class="result">@ResultMessage</p>
        <button @onclick="Reset">リセット</button>
    }
</div>

@code {
    bool GameStarted, GameOver;
    string ResultMessage = "";
    Hand Player = null!;
    Hand Dealer = null!;
    
    BlackJackGameService gameService = null!;
    BlackJackLogicService logicService = null!;

    protected override void OnInitialized()
    {
        gameService = new BlackJackGameService();
        logicService = new BlackJackLogicService();
        
        Player = new Hand();
        Dealer = new Hand();
        GameStarted = false;
        GameOver = false;
        ResultMessage = "";
    }

    void StartGame()
    {                
        // 初期配牌
        Player.Add(gameService.DrawCard());
        Player.Add(gameService.DrawCard());
        Dealer.Add(gameService.DrawCard());
        Dealer.Add(gameService.DrawCard());
        GameStarted = true;
        
        // ブラックジャックチェック
        if (logicService.IsBlackjack(Player.Score, Player.Cards.Count))
        {
            EndGame();
        }
    }

    void Hit()
    {
        Player.Add(gameService.DrawCard());
        if (Player.IsBust)
            EndGame();
    }

    void Stand()
    {
        // ディーラーのターン
        while (logicService.ShouldDealerHit(Dealer.Score))
        {
            Dealer.Add(gameService.DrawCard());
        }
        EndGame();
    }

    void EndGame()
    {
        GameOver = true;
        ResultMessage = logicService.DetermineWinner(
            Player.Score, 
            Dealer.Score, 
            Player.IsBust, 
            Dealer.IsBust
        );
    }

    void Reset()
    {
        GameStarted = false;
        GameOver = false;
        gameService.ReturnCards(Player, Dealer);
        Player.ResetCards();
        Dealer.ResetCards();
    }
}
